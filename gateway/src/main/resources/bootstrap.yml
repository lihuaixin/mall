server:
  port: 8090
    ###server.servlet.context-path，由于gateway用的是webflux，所以这个设定其实是不生效的，现在还没有一个key来设定webflux的context-path
    ###为了nginx能把请求都统一路由到gateway，所以必须要有一个统一的前缀，这里定义为gateway，nginx可以设置请求前缀为/gateway的请求都转发到gateway服务上
  servlet:
    context-path: gateway

#注册服务
eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:8000/eureka/
  instance:
    prefer-ip-address: true


#jasypt加解密时使用
jasypt:
  encryptor:
    password: 9FET6pBiQo7h2nUA6SAccrak9GB0/Nuwomw4u5Un56llsI3C1JiezTjhkPQk

spring:
  profiles:
    active: dev
  application:
    name: gateway
  cloud: #使用DiscoveryClient找到配置服务器
    config:
      discovery:
        # 使用eureka发现配置中心服务
        enabled: true
        # 配置中心服务名称/ID
        serviceId: config
      uri: http://127.0.0.1:11111 #配置服务
      label: master
    gateway:
      discovery:
        locator:
         #Flag that enables DiscoveryClient gateway integration
         #是否与服务发现组件进行结合，通过 serviceId 转发到具体的服务实例。默认为false，设为true便开启通过服务中心的自动根据 serviceId 创建路由的功能
          enabled: true
      redis-rate-limiter:
        #令牌桶每秒填充平均速率
        apiReplenishRate: 2
        # 令牌桶最大容量,用户允许在一秒钟内完成的最大请求数
        apiBurstCapacity: 2
  redis:
    host: 192.168.106.76
    database: 7
    port: 6379
    password: ENC(kYjyUavJ/hWpppO1yvSIUotbAn2MeeOu)


### 特别注意 目前Spring Cloud gateway接入了hystrix，hystrix的默认采用线程池来执行接口调用的请求，
### 如果hystrix熔断时间设置过大，万一下游服务偶然出现响应超时，那线程池里的线程将全部消耗卡死，所以一定要从业务上来优化接口响应时间
### ribbon和hystrix的超时时间设置，不要因为系统接口的性能过差而懒惰，搞成几秒甚至几十秒的超时，一般超时定义在1秒以内，是比较通用以及合理的
### hystrix的熔断时间一定要大于ribbon超时时间
##设置hystrix超时时间(毫秒),设置调用者等待命令执行的超时限制，超过此时间，HystrixCommand被标记为TIMEOUT，并执行回退逻辑,默认1s
## 基于目前有些接口还未优化到位，熔断时间先设置成3秒
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 3000
    vipHystrixCommand:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000
    orderHystrixCommand:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000

#log配置
logging:
  config: classpath:logback.xml
  path: ${user.home}/logs/${spring.application.name}
  level:
    com.xxx.mall: DEBUG

#终端 配置
management:
  # 启用shutdown,优雅的关闭服务，默认是false
  endpoint:
    shutdown:
      enabled: true
  endpoints:
    web:
      exposure:
        #暴露actuator中的某些接口， refresh 刷新config配置信息,shutdown关闭接口
        include: '*'
